# To get the values for ID_PATH for each plugged in camera you can use the following line
# `udevadm info -q all /dev/video7 | grep ID_PATH=`
# Note that the way the odroid seems to work is that it first assigns 7 and then goes down from that
# so if you have 3 cameras it would be /dev/video7, 6, 5, etc.. as opposed to on a regular computer where it usually assigns 0 first and increments from there
# To quickly test if that camera actually works (without the GUI) you can run `./start_stream.sh /dev/video{number}`
# to see if the proper camera starts. Visit http://{odroid_ip_address}:8090/?action=stream to view it.

# Currently implemented orientation on usb hub, from left to right: 'Rear', 'None', 'Arm/Science'
# The 'Front' camera is connected to the top 3.0 port on the 3.0 odroid usb root hub
# Note that for 'None' we actually have the rover teensy connected,
# but we don't need to worry about MCUs since they identify themselves via our own serial command "who"
# Also the usb hub itself is connected to the single usb 2.0 port on the odroid

# You will probably need to change the ID_PATH values if you're not testing camera streams with the Rover
# (see the first paragraph above on how to do that)
# After making changes to this file you should restart the computer
SUBSYSTEM=="video4linux", ENV{ID_PATH}=="platform-12110000.usb:-usb-0:1.1:1.0", SYMLINK+="videoArmScience"
SUBSYSTEM=="video4linux", ENV{ID_PATH}=="platform-xhci-hcd.2.auto-usb-0:1.2:1.0", SYMLINK+="videoFront"
SUBSYSTEM=="video4linux", ENV{ID_PATH}=="platform-12110000.usb:-usb-0:1.3:1.0", SYMLINK+="videoRear"

### NOTE! If you change the camera, the ID_PATH may change (especially it is a different model webcam) ###
