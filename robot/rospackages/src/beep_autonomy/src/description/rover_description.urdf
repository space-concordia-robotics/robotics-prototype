<?xml version="1.0"?>
<robot name="rover" xmlns:xacro="http://ros.org/wiki/xacro">

  <!-- Define robot constants -->
  <xacro:property name="scale_factor" value="1"/>

  <xacro:property name="base_width" value="0.31"/>
  <xacro:property name="base_length" value="0.84"/>
  <xacro:property name="base_height" value="0.18"/>

  <xacro:property name="wheel_radius" value="0.15"/>
  <xacro:property name="wheel_width" value="0.125"/>
  <xacro:property name="wheel_yoff" value="0.25"/>
  <xacro:property name="wheel_zoff" value="0.05"/>
  <xacro:property name="wheel_xoff" value="0.12"/>

  <xacro:property name="wheel_spacing" value="0.45"/>
  <xacro:property name="wheel_height" value="0.25"/>

  
  
  <xacro:property name="bogey_pivot_zoff" value="0"/>
  <xacro:property name="bogey_width" value="0.065"/>

  <xacro:property name="pivot_zoff" value="0.05"/>
  


  <!-- Define intertial property macros  -->
  <xacro:macro name="box_inertia" params="m w h d xoff yoff zoff">
    <inertial>
      <origin xyz="${xoff} ${yoff} ${zoff}" rpy="${pi/2} 0 ${pi/2}"/>
      <mass value="${m}"/>
      <inertia ixx="${(m/12) * (h*h + d*d)}" ixy="0.0" ixz="0.0" iyy="${(m/12) * (w*w + d*d)}" iyz="0.0" izz="${(m/12) * (w*w + h*h)}"/>
    </inertial>
  </xacro:macro>

  <xacro:macro name="cylinder_inertia" params="m r h">
    <inertial>
      <origin xyz="0 0 0" rpy="${pi/2} 0 0" />
      <mass value="${m}"/>
      <inertia ixx="${(m/12) * (3*r*r + h*h)}" ixy = "0" ixz = "0" iyy="${(m/12) * (3*r*r + h*h)}" iyz = "0" izz="${(m/2) * (r*r)}"/>
    </inertial>
  </xacro:macro>

  
    <!-- Robot Base -->
  <link name="base_link">
    <origin xyz="0.0 0.0 0.0" rpy="0.0 0.0 0.0"/>
    <visual>
      <origin xyz="-0.06 0.0 0.0" rpy="0.0 0.0 0.0"/>
      <geometry>
        <box size="0.68 ${base_width} ${base_height}"/>
      </geometry>
      <material name="Cyan">
        <color rgba="0 1.0 1.0 1.0"/>
      </material>
    </visual>
    <visual>
      <origin xyz="0.37 0.0 0.0" rpy="0.0 0.0 0.0"/>
      <geometry>
        <box size="0.18 ${base_width} 0.08"/>
      </geometry>
    </visual>
    
    <collision>
      <origin xyz="-0.06 0.0 0.0" rpy="0.0 0.0 0.0"/>
      <geometry>
        <box size="0.68 ${base_width} ${base_height}"/>
      </geometry>
    </collision>
    <collision>
      <origin xyz="0.37 0.0 0.0" rpy="0.0 0.0 0.0"/>
      <geometry>
        <box size="0.18 ${base_width} 0.08"/>
      </geometry>
    </collision>

    <xacro:box_inertia m="15" w="0.68" d="${base_width}" h="${base_height}" xoff="-0.06" yoff="0" zoff="0"/>
    <xacro:box_inertia m="1" w="0.18" d="${base_width}" h="0.08" xoff="0.37" yoff="0" zoff="0"/>
  </link>

  <!-- Robot Footprint -->
  <link name="base_footprint"/>

  <joint name="base_joint" type="fixed">
    <parent link="base_footprint"/>
    <child link="base_link"/>
    <origin xyz="0.0 0.0 ${(wheel_radius+wheel_height)}" rpy="0 0 0"/>
  </joint>

  <!--Front Rocker Bogeys-->
  <xacro:macro name="bogey" params="prefix y_reflect">
      <link name="${prefix}_link">
          <visual>
              <origin xyz="0.0 0.0 0.0" rpy="0.0 0.0 0.0"/>
              <geometry>
                  <box size="${wheel_spacing*1.2} ${bogey_width} ${bogey_width}"/>
              </geometry>
          </visual>
          <collision>
            <origin xyz="0.0 0.0 0.0" rpy="0.0 0.0 0.0"/>
            <geometry>
                <box size="${wheel_spacing*1.2} ${bogey_width} ${bogey_width}"/>
            </geometry>
          </collision>
          <xacro:box_inertia m="1" w="${bogey_width}" d="${wheel_spacing*1.2}" h="${bogey_width}" xoff="0" yoff="0" zoff="0"/>
      </link>
      <joint name="${prefix}_joint" type="revolute">
          <limit effort="1000.0" lower="-0.5" upper="0.5" velocity="0.5"/>
          <parent link="base_link"/>
          <child link="${prefix}_link"/>
          <origin xyz="${wheel_spacing/2} ${y_reflect*(base_width/2+bogey_width/2)} ${-pivot_zoff}" rpy="0.0 0.0 0.0"/>
          <axis xyz="0 1 0"/>
      </joint>
  </xacro:macro>
  
  <xacro:bogey prefix="bogey_l" y_reflect="1"/>
  <xacro:bogey prefix="bogey_r" y_reflect="-1"/>

  <link name="bogey_b_link">
    <visual>
      <origin xyz="0.0 0.0 0.0" rpy="0.0 0.0 0.0"/>
      <geometry>
        <box size="${bogey_width} ${base_width+2*bogey_width} ${bogey_width}"/>
      </geometry>
    </visual>
    <collision>
      <origin xyz="0.0 0.0 0.0" rpy="0.0 0.0 0.0"/>
      <geometry>
        <box size="${bogey_width} ${base_width+bogey_width} ${bogey_width}"/>
      </geometry>
    </collision>
    <xacro:box_inertia m="1" w="${base_width+2*bogey_width}" d="${bogey_width}" h="${bogey_width}" xoff="0" yoff="0" zoff="0"/>
  </link>
  <joint name="bogey_b_joint" type="continuous">
    <parent link="base_link"/>
    <child link="bogey_b_link"/>
    <origin xyz="${-wheel_spacing} 0.0 ${-pivot_zoff}" rpy="0.0 0.0 0.0"/>
  </joint>  

  <!-- Wheels -->
  <xacro:macro name="wheel" params="parent prefix x_off y_off z_off x_reflect y_reflect type">
    <link name="${prefix}_link">
      <visual>
        <origin xyz="0 0 0" rpy="${pi/2} 0 0"/>
        <geometry>
          <cylinder radius="${wheel_radius}" length="${wheel_width}"/>
        </geometry>
        <material name="Gray">
          <color rgba="0.5 0.5 0.5 1.0"/>
        </material>
      </visual>
      <collision>
        <origin xyz="0 0 0" rpy="${pi/2} 0 0"/>
        <geometry>
          <cylinder radius="${wheel_radius}" length="${wheel_width}"/>
        </geometry>
      </collision>
      
      <xacro:cylinder_inertia m="1" r="${wheel_radius}" h="${wheel_width}"/>
    </link>

    <joint name="${prefix}_joint" type="${type}">
      <parent link="${parent}_link"/>
      <child link="${prefix}_link"/>
      <origin xyz="${x_reflect*x_off} ${y_reflect*(y_off)} ${z_off}" rpy="0 0 0"/>
      <axis xyz="0 1 0"/>
    </joint>

    
  </xacro:macro>
  
  <xacro:wheel parent="bogey_l" prefix="wheel_l_f" x_off="${wheel_spacing/2}" y_off="${bogey_width/2+wheel_width/2}" z_off="${-(wheel_height-pivot_zoff)}" x_reflect="1" y_reflect="1" type="continuous"/>
  <xacro:wheel parent="bogey_l" prefix="wheel_l_m" x_off="${wheel_spacing/2}" y_off="${bogey_width/2+wheel_width/2}" z_off="${-(wheel_height-pivot_zoff)}" x_reflect="-1" y_reflect="1" type="continuous"/>
  <xacro:wheel parent="bogey_b" prefix="wheel_l_b" x_off="0" y_off="${base_width/2+bogey_width+wheel_width/2}" z_off="${-(wheel_height-pivot_zoff)}" x_reflect="-1" y_reflect="1" type="continuous"/>
  <xacro:wheel parent="bogey_r" prefix="wheel_r_f" x_off="${wheel_spacing/2}" y_off="${bogey_width/2+wheel_width/2}" z_off="${-(wheel_height-pivot_zoff)}" x_reflect="1" y_reflect="-1" type="continuous"/>
  <xacro:wheel parent="bogey_r" prefix="wheel_r_m" x_off="${wheel_spacing/2}" y_off="${bogey_width/2+wheel_width/2}" z_off="${-(wheel_height-pivot_zoff)}" x_reflect="-1" y_reflect="-1" type="continuous"/>
  <xacro:wheel parent="bogey_b" prefix="wheel_r_b" x_off="0" y_off="${base_width/2+bogey_width+wheel_width/2}" z_off="${-(wheel_height-pivot_zoff)}" x_reflect="-1" y_reflect="-1" type="continuous"/>
  
  


  <link name="imu_link"/>
  
  <joint name="imu_joint" type="fixed">
    <parent link="base_link"/>
    <child link="imu_link"/>
    <origin xyz="0.37 0 0.12"/>
  </joint>
  
  <gazebo reference="imu_link">
    <sensor name="imu_sensor" type="imu">
     <plugin filename="libgazebo_ros_imu_sensor.so" name="imu_plugin">
        <ros>
          
          <remapping>~/out:=imu</remapping>
        </ros>
        <initial_orientation_as_reference>false</initial_orientation_as_reference>
      </plugin>
      <always_on>true</always_on>
      <update_rate>100</update_rate>
      <visualize>true</visualize>
      <imu>
        <angular_velocity>
          <x>
            <noise type="gaussian">
              <mean>0.0</mean>
              <stddev>2e-4</stddev>
              <bias_mean>0.0000075</bias_mean>
              <bias_stddev>0.0000008</bias_stddev>
            </noise>
          </x>
          <y>
            <noise type="gaussian">
              <mean>0.0</mean>
              <stddev>2e-4</stddev>
              <bias_mean>0.0000075</bias_mean>
              <bias_stddev>0.0000008</bias_stddev>
            </noise>
          </y>
          <z>
            <noise type="gaussian">
              <mean>0.0</mean>
              <stddev>2e-4</stddev>
              <bias_mean>0.0000075</bias_mean>
              <bias_stddev>0.0000008</bias_stddev>
            </noise>
          </z>
        </angular_velocity>
        <linear_acceleration>
          <x>
            <noise type="gaussian">
              <mean>0.0</mean>
              <stddev>1.7e-2</stddev>
              <bias_mean>0.1</bias_mean>
              <bias_stddev>0.001</bias_stddev>
            </noise>
          </x>
          <y>
            <noise type="gaussian">
              <mean>0.0</mean>
              <stddev>1.7e-2</stddev>
              <bias_mean>0.1</bias_mean>
              <bias_stddev>0.001</bias_stddev>
            </noise>
          </y>
          <z>
            <noise type="gaussian">
              <mean>0.0</mean>
              <stddev>1.7e-2</stddev>
              <bias_mean>0.1</bias_mean>
              <bias_stddev>0.001</bias_stddev>
            </noise>
          </z>
        </linear_acceleration>
      </imu>
    </sensor>
  </gazebo>
  <gazebo>
    <plugin name="joint_state_publisher" filename="libgazebo_ros_joint_state_publisher.so">
        <joint_name>wheel_l_f_joint</joint_name>
        <joint_name>wheel_l_m_joint</joint_name>
        <joint_name>wheel_l_b_joint</joint_name>
        <joint_name>wheel_r_f_joint</joint_name>
        <joint_name>wheel_r_m_joint</joint_name>
        <joint_name>wheel_r_b_joint</joint_name>
        <joint_name>bogey_l_joint</joint_name>
        <joint_name>bogey_r_joint</joint_name>
    </plugin>
</gazebo>
  <gazebo>
    <plugin name='wheel_slip' filename='libgazebo_ros_wheel_slip.so'>
      <ros>
        
      </ros>
      <wheel link_name="wheel_l_f_link">
        <slip_compliance_lateral>1</slip_compliance_lateral>
        <slip_compliance_longitudinal>1</slip_compliance_longitudinal>
        <wheel_normal_force>1</wheel_normal_force>
      </wheel>
      <wheel link_name="wheel_r_f_link">
        <slip_compliance_lateral>1</slip_compliance_lateral>
        <slip_compliance_longitudinal>1</slip_compliance_longitudinal>
        <wheel_normal_force>1</wheel_normal_force>
      </wheel>
      <wheel link_name="wheel_l_b_link">
        <slip_compliance_lateral>1</slip_compliance_lateral>
        <slip_compliance_longitudinal>1</slip_compliance_longitudinal>
        <wheel_normal_force>1</wheel_normal_force>
      </wheel>
      <wheel link_name="wheel_r_b_link">
        <slip_compliance_lateral>1</slip_compliance_lateral>
        <slip_compliance_longitudinal>1</slip_compliance_longitudinal>
        <wheel_normal_force>1</wheel_normal_force>
      </wheel>
    </plugin>
  </gazebo>
  <gazebo>
    <plugin name='diff_drive' filename='libgazebo_ros_diff_drive.so'>
      <ros>
          
      </ros>      
      <num_wheel_pairs>3</num_wheel_pairs>
      <left_joint>wheel_l_f_joint</left_joint>
      <left_joint>wheel_l_m_joint</left_joint>
      <left_joint>wheel_l_b_joint</left_joint>
      <right_joint>wheel_r_f_joint</right_joint>
      <right_joint>wheel_r_m_joint</right_joint>
      <right_joint>wheel_r_b_joint</right_joint>

      <wheel_separation>${wheel_width+base_width}</wheel_separation>
      <wheel_diameter>${2*wheel_radius}</wheel_diameter>



      <max_wheel_torque>20</max_wheel_torque>
      <max_wheel_acceleration>1.0</max_wheel_acceleration>
      
      <command_topic>cmd_vel</command_topic>

      <publish_odom>true</publish_odom>
      <publish_odom_tf>false</publish_odom_tf>
      <publish_wheel_tf>false</publish_wheel_tf>
      
      
      
      <odometry_frame>odom</odometry_frame>
      <robot_base_frame>base_link</robot_base_frame>
    </plugin>
  </gazebo>
  <link name="lidar_link">
    <inertial>
      <origin xyz="0 0 0" rpy="0 0 0"/>
      <mass value="0.125"/>
      <inertia ixx="0.001"  ixy="0"  ixz="0" iyy="0.001" iyz="0" izz="0.001" />
    </inertial>
  
    <collision>
      <origin xyz="0 0 0" rpy="0 0 0"/>
      <geometry>
         <cylinder radius="0.0508" length="0.055"/>
      </geometry>
    </collision>
  
    <visual>
      <origin xyz="0 0 0" rpy="0 0 0"/>
      <geometry>
         <cylinder radius="0.0508" length="0.055"/>
      </geometry>
    </visual>
  </link>
  
  <joint name="lidar_joint" type="fixed">
    <parent link="base_link"/>
    <child link="lidar_link"/>
    <origin xyz="0.37 0 0.2" rpy="0 0 0"/>
  </joint>
  
  <gazebo reference="lidar_link">
    <sensor name="lidar" type="ray">
      <always_on>true</always_on>
      <visualize>true</visualize>
      <update_rate>5</update_rate>
      <ray>
        <scan>
          <horizontal>
            <samples>360</samples>
            <resolution>1.000000</resolution>
            <min_angle>0.000000</min_angle>
            <max_angle>6.280000</max_angle>
          </horizontal>
           <vertical>
            <samples>16</samples>
            <resolution>1.000000</resolution>
            <min_angle>-0.289724</min_angle>
            <max_angle>0.289724</max_angle>
          </vertical>
        </scan>
        <range>
          <min>0.150000</min>
          <max>90</max>
          <resolution>0.015000</resolution>
        </range>
        <noise>
          <type>gaussian</type>
          <mean>0.0</mean>
          <stddev>0.01</stddev>
        </noise>
      </ray>
      <plugin name="scan" filename="libgazebo_ros_ray_sensor.so">
        <ros>
          <remapping>~/out:=scan</remapping>
        </ros>
        <output_type>sensor_msgs/PointCloud2</output_type>
        <frame_name>lidar_link</frame_name>
      </plugin>
      
    </sensor>
  </gazebo>

  <link name="gps_link" >
    <visual>
      <geometry>
        <box size="0.1 0.1 0.1"/>
      </geometry>
    </visual>
  
    <collision>
      <geometry>
        <box size="0.1 0.1 0.1"/>
      </geometry>
    </collision>
  
    <xacro:box_inertia m="0.1" w="0.1" d="0.1" h="0.1" xoff="0" yoff="0" zoff="0"/>
  </link>

  <joint name="gps_joint" type="fixed">
    <parent link="base_link"/>
    <child link="gps_link"/>
    <origin xyz="0 0 0" rpy="0 0 0"/>
  </joint> 
  <gazebo reference="gps_link">
    <sensor name="gps" type="gps">
      <always_on>true</always_on>
      <update_rate>1</update_rate>
      <gps>
        <position_sensing>
          <horizontal>
            <noise type="gaussian">
              <mean>0.0</mean>
              <stddev>0.01</stddev>
            </noise>
          </horizontal>
          <vertical>
            <noise type="gaussian">
              <mean>0.0</mean>
              <stddev>0.01</stddev>
            </noise>
          </vertical>
        </position_sensing>
      </gps>
      <plugin name="my_gps_plugin" filename="libgazebo_ros_gps_sensor.so">
        <ros>
          <remapping>~/out:=/gps/fix</remapping>
        </ros>
        <output_type>sensor_msgs/msg/NavSatFix</output_type>
        <frame_name>gps_link</frame_name>
      </plugin>
    </sensor>
  </gazebo>



</robot>
