cmake_minimum_required(VERSION 3.8)
project(aruco_search)

if (CMAKE_COMPILER_IS_GNUCXX OR CMAKE_CXX_COMPILER_ID MATCHES "Clang")
    add_compile_options(-Wall -Wextra -Wpedantic)
endif ()

# find dependencies
find_package(ament_cmake REQUIRED)
find_package(nav2_common REQUIRED)
find_package(rclcpp REQUIRED)
find_package(rclcpp_action REQUIRED)
find_package(rclcpp_lifecycle REQUIRED)
find_package(builtin_interfaces REQUIRED)
find_package(geometry_msgs REQUIRED)
find_package(sensor_msgs REQUIRED)
find_package(nav2_msgs REQUIRED)
find_package(nav_msgs REQUIRED)
find_package(behaviortree_cpp REQUIRED)
find_package(tf2_ros REQUIRED)
find_package(tf2_geometry_msgs REQUIRED)
find_package(std_msgs REQUIRED)
find_package(std_srvs REQUIRED)
find_package(nav2_util REQUIRED)
find_package(example_interfaces REQUIRED)

include_directories(include)

set(library_name ${PROJECT_NAME})

set(dependencies
        rclcpp
        rclcpp_action
        rclcpp_lifecycle
        geometry_msgs
        sensor_msgs
        nav2_msgs
        nav_msgs
        behaviortree_cpp
        tf2
        tf2_ros
        tf2_geometry_msgs
        std_msgs
        std_srvs
        nav2_util
)

if (BUILD_TESTING)
    find_package(ament_lint_auto REQUIRED)
    # the following line skips the linter which checks for copyrights
    # comment the line when a copyright and license is added to all source files
    set(ament_cmake_copyright_FOUND TRUE)
    # the following line skips cpplint (only works in a git repo)
    # comment the line when this package is in a git repo and when
    # a copyright and license is added to all source files
    set(ament_cmake_cpplint_FOUND TRUE)
    ament_lint_auto_find_test_dependencies()
endif ()

add_executable(find_aruco src/FindArucoTagNode.cpp)
#ament_target_dependencies(find_aruco rclcpp std_msgs)
ament_target_dependencies(find_aruco ${dependencies})

install(DIRECTORY include/
        DESTINATION include/
)

install(TARGETS
        find_aruco
        DESTINATION lib/${PROJECT_NAME}
)
ament_package()
